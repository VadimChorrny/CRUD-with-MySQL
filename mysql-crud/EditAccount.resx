<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>